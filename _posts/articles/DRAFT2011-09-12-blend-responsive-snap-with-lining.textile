---
  layout: post
  title: Snap! Rich, responsive, modern
  permalink: ideas/snap-a-rich-responsive-and-modern-web-template
  categories: [articles]
---

<h2>Different outputs on different devices with the same code? That’s the trend these days. No longer are we stuck to a particular view applied to many devices. Instead, devices interpret the layout in different ways depending on the context in which the information is viewed. Dedicated, separate mobile websites are a thing of the past. Buh-bye…</h2>

<div class="img_wrap"><img src="/img/articles/snap-1024x574.jpg" width="100%" /></div><br />

Until recently, designs started off with constrained proportions, with the designer laying out a page, as though it was going to be printed and cut to a particular size. For the web, that’s the wrong approach. Designs should melt into a whatever format is best for the device on which they are viewed. It should be thought of as a moldable cluster of information, with variables and tolerances built to mesh with different formats and devices.

Good design is supposed to be flexible. You can’t force-fit a single design into a variety of formats. For too long, web design has been an extension of print design, hence antiquated terms we use every day such as ‘web page.’ At this point, the web is ready for a better design. Responsive design is the solution to this problem.

A responsive web page contains code that specifies specific layout elements to kick in and kick out at certain widths of the window in which it is being viewed.






The trick with responsive design is to keep it simple. I'd say, 1 or 2 breakpoints tops. A breakpoint is a threshold, usually a particular point in the width of a layout. For example at the largest size, all of the elements on the page show up like any other page, with items arranged in columns on a grid. When the window is re-sized below a certain point, like let's say, below 580px wide, all of the elements stack up and down, and buttons become larger, so if someone is looking at the page on a cell phone, it would be easier for them to read and interact with the content on the page. I've noticed that many of the layout frameworks out there contain multiple breakpoints for different devices and versions. I say that's too complicated. Just pick one break point, such as the 580px, and go with it. It's much simpler and cleaner that way. If you're above this threshold, show the whole layout, otherwise stack everything...

